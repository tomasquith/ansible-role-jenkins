---
- name: Ensure dependencies are installed.
  package:
    name:
      - curl
      - libselinux-python
      # - initscripts
    state: present

# - name: Ensure Jenkins repo is installed.
#   get_url:
#     url: "{{ jenkins_repo_url }}"
#     dest: /etc/yum.repos.d/jenkins.repo
#   when: jenkins_repo_url != ''

# - name: Add Jenkins repo GPG key.
#   rpm_key:
#     state: present
#     key: "{{ jenkins_repo_key_url }}"

# - name: Download specific Jenkins version.
#   get_url:
#     url: "{{ jenkins_pkg_url }}/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
#     dest: "/tmp/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
#   when: jenkins_version is defined

- name: Ensure group "jenkins" exists
  group:
    name: jenkins
    state: present

- name: Add jenkins user
  user:
    name: jenkins
    shell: /bin/bash
    group: jenkins

- file:
    path: '/usr/share/jenkins'
    state: directory
    owner: jenkins

- name: Download jenkins war with check (sha256)
  get_url:
    url: https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/{{ jenkins_version }}/jenkins-war-{{ jenkins_version }}.war
    dest: /usr/share/jenkins/jenkins.war
    checksum: 'sha256:{{ jenkins_checksum }}'

- file: 
    path: "{{ jenkins_home }}"
    owner: jenkins
    recurse: true

- file:
    path: "/usr/share/jenkins/ref"
    owner: jenkins
    recurse: true



# - name: Check if we downloaded a specific version of Jenkins.
#   stat:
#     path: "/tmp/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
#   register: specific_version
#   when: jenkins_version is defined

# - name: Install our specific version of Jenkins.
#   package:
#     name: "/tmp/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
#     state: present
#   when: jenkins_version is defined and specific_version.stat.exists
#   notify: configure default users

# - name: Ensure Jenkins is installed.
#   package:
#     name: jenkins
#     state: "{{ jenkins_package_state }}"
#   notify: configure default users
